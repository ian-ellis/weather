evaluationDependsOn ':Weather'

def weatherBuildTask = ":Weather:compileDebugSources"
def weatherUnitCompileTask = ":WeatherUnit:compileTestGroovy"
def weatherClassBase = "../Weather/build/intermediates/classes/debug"



for (def plugin in [
  'groovy',
  'kotlin'
]) {
  apply plugin: plugin
}

//

sourceSets {
  test {
    groovy.srcDirs += "/src/test/groovy"
  }
}

test {
  dependsOn "$weatherBuildTask", "$weatherUnitCompileTask"

}

check.dependsOn "$weatherBuildTask", 'test'

dependencies {
  compile project(':Weather')
  testCompile files("$weatherClassBase")
  testCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  testCompile "org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}"
  testCompile "io.reactivex:rxjava:${rx_java_version}"
  testCompile 'cglib:cglib-nodep:3.1'
  testCompile 'org.codehaus.groovy:groovy-all:2.4.1'
  testCompile 'org.objenesis:objenesis:2.1'
  testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
  testCompile 'junit:junit:4.12'
  testCompile 'com.google.code.gson:gson:2.3.1'
  testCompile 'com.google.android:android:4.1.1.4'
  testCompile 'org.powermock:powermock-module-junit4:1.6.2'
  testCompile 'org.powermock:powermock-module-junit4-rule:1.6.2'
  testCompile 'org.powermock:powermock-api-mockito:1.6.2'
  testCompile 'org.powermock:powermock-classloading-xstream:1.6.2'


}


